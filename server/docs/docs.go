// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/dashboard": {
            "get": {
                "description": "Retrieve sales data for the dashboard",
                "produces": [
                    "application/json"
                ],
                "summary": "Get dashboard sales data",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved sales dashboard",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sale": {
            "get": {
                "description": "Retrieve all sales data",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all sales",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved sales",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sale-brand": {
            "get": {
                "description": "Retrieve sales data grouped by brand",
                "produces": [
                    "application/json"
                ],
                "summary": "Get sales by brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (asc/desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text to search",
                        "name": "searchText",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved sales by brand",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/sale-product": {
            "get": {
                "description": "Retrieve sales data grouped by product",
                "produces": [
                    "application/json"
                ],
                "summary": "Get sales by product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "perPage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort order (asc/desc)",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text to search",
                        "name": "searchText",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved sales by product",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
